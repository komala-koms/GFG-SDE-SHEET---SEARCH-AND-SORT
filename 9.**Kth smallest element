public static void  max_heapify(int arr[],int i,int heap_size)
    {
        int L=(2*i)+1;
        int R=(2*i)+2;
        int largest=i;
        if(L<heap_size && arr[i]<arr[L])
        {
            largest = L;
        }
        if(R<heap_size && arr[largest]<arr[R])
        {
            largest = R;
        }
        if(largest!=i)
        {
            int temp = arr[i];
            arr[i] = arr[largest];
            arr[largest] = temp;
            max_heapify(arr,largest,heap_size);
        }
    }
    public static int kthSmallest(int[] arr, int l, int r, int k) 
    { 
        //Your code here
        int heap_size = k;
        for(int i=(heap_size/2)-1;i>=0;i-=1)
        {
            max_heapify(arr,i,heap_size);
        }
        for(int i=k;i<=r;i++)
        {
            if(arr[i] < arr[0])
            {
                arr[0] = arr[i];
                
                max_heapify(arr,0,heap_size);
            }
        }       
    
        return arr[0];
        
    } 
